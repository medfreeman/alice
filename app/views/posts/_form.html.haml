= form_for @post, html: {class: 'ui form post', :multipart => true } do |f|
  - if @post.errors.any?
    #error_explanation.ui.negative.message
      %h2.header= "#{pluralize(@post.errors.count, "error")} prohibited this post from being saved:"
      %ul
        - @post.errors.full_messages.each do |msg|
          %li.errors= msg
  - if current_user.super_director?
    .field.post-year
      = f.label :year
      = f.select(:year_id, options_from_collection_for_select(@years, :id, :slug, @post.year_id), {include_blank: true}, {class: 'ui fluid dropdown custom'})
    - @years.each do |y|
      .field.post-studio{id: "year-#{y.id}"}
        = f.label :studio_id
        = f.select(:studio_id, options_from_collection_for_select(y.studios, :id, :name, @post.studio_id), {include_blank: true}, {class: 'ui fluid dropdown'})
  - else
    = f.hidden_field :year_id, value: @year.id
  .field
    = f.label :title
    = f.text_field :title
  .field
    = f.label "Extract Thumbnail", for: :thumbnail
    = f.file_field :thumbnail, class: "image-input"
    .thumbnail= image_tag @post.thumbnail.url(:thumb), class: "form-image-thumb"
  .field
    = f.label :body
    = f.text_area :body, class: "froala"
  - if can_post_to_categories?
    = check_box_tag :is_studio, nil, @selected_categories.empty?, class: "is_studio"
    = label_tag :is_studio, 'Studio Post'
  - if @categories && can_post_to_categories?
    .field.categories
      = label :category_list, 'Categories'
      - if can_edit_categories?
        = f.text_field :category_list, value: @categories.nil? ? nil : @selected_categories.join(', '), label: "Do not include commas"
      - elsif can_post_to_categories?
        = f.select(:category_list, options_from_collection_for_select(@categories, 'name', 'name', @selected_categories), {include_blank: true}, {class: 'ui fluid dropdown'})
  .field.tags
    = label :tag_list, 'Tags'
    = f.select(:tag_list, options_from_collection_for_select(@tags, 'name', 'name', @selected_tags), {include_blank: true}, {class: 'ui fluid dropdown', multiple: true})
  .ui.checkbox.toggle.two-labels
    %span 
      Processus
      %i.icon.post-status.wrench
    = f.check_box :status, checked: @post.status?
    %label{:for => "post_status"} 
      %i.icon.post-status.checkmark 
      Formes
  - if !@students.empty?
    .field
      - checked = @post.authors.map(&:id) + [@post.persisted? ? nil : current_user.id]
      = f.label :authors
      = f.collection_check_boxes :authors, @students, :id, :name, {checked: checked}

  .actions
    = f.submit 'Save', class: "ui button green"